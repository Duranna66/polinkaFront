import React, { useEffect, useState } from "react";
import "./ScheduleEdit.css";
import { getSchedule, saveSchedule, checkAuth } from "../api";
import { useNavigate } from "react-router-dom";

const ScheduleAdmin = () => {
    const [group, setGroup] = useState("–ü–ú–ò-101");
    const [schedule, setSchedule] = useState([]);
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState("");
    const navigate = useNavigate();

    useEffect(() => {
        const verifyAuth = async () => {
            try {
                await checkAuth();
            } catch (err) {
                navigate("/auth");
            }
        };
        verifyAuth();
    }, [navigate]);

    const loadSchedule = async () => {
        setLoading(true);
        setError("");
        try {
            const data = await getSchedule(group);
            setSchedule(data);
        } catch (err) {
            setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è");
        } finally {
            setLoading(false);
        }
    };

    const handleChange = (index, field, value) => {
        const updated = [...schedule];
        updated[index][field] = value;
        setSchedule(updated);
    };

    const addRow = () => {
        setSchedule([...schedule, { day: "", subject: "", time: "" }]);
    };

    const handleSave = async () => {
        try {
            const enriched = schedule.map((row) => ({
                ...row,
                group: group, // üëà –¥–æ–±–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É —è–≤–Ω–æ
            }));

            await saveSchedule(enriched);
            alert("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ");
        } catch (err) {
            alert("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ");
        }
    };

    return (
        <div className="schedule-container">
            <h1>–ê–¥–º–∏–Ω–∫–∞: —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è</h1>

            <div className="selectors">
                <label>–ì—Ä—É–ø–ø–∞</label>
                <input
                    value={group}
                    onChange={(e) => setGroup(e.target.value)}
                />
                <button onClick={loadSchedule} disabled={loading}>
                    –ó–∞–≥—Ä—É–∑–∏—Ç—å
                </button>
            </div>

            {error && <p className="error">{error}</p>}

            <h2>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</h2>
            <div className="schedule-list">
                {schedule.map((item, i) => (
                    <div key={i} className="schedule-row">
                        <input
                            value={item.day}
                            placeholder="–î–µ–Ω—å"
                            onChange={(e) => handleChange(i, "day", e.target.value)}
                        />
                        <input
                            value={item.subject}
                            placeholder="–ü—Ä–µ–¥–º–µ—Ç"
                            onChange={(e) => handleChange(i, "subject", e.target.value)}
                        />
                        <input
                            value={item.time}
                            placeholder="–í—Ä–µ–º—è"
                            onChange={(e) => handleChange(i, "time", e.target.value)}
                        />
                    </div>
                ))}
            </div>

            <button onClick={addRow}>–î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É</button>
            <button onClick={handleSave}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ</button>
            <button onClick={() => navigate("/main")}>–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é</button>
        </div>
    );
};

export default ScheduleAdmin;